package com.example.JEEPOTD.entity;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import com.example.JEEPOTD.enums.ChoosedOptionCorrect;
import com.example.JEEPOTD.enums.Exam;
import com.example.JEEPOTD.enums.Level;
import com.example.JEEPOTD.enums.MCQ;
import com.example.JEEPOTD.enums.Present;
import com.example.JEEPOTD.enums.ProblemSet;
import com.example.JEEPOTD.enums.Shift;
import com.example.JEEPOTD.enums.Subject;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Builder
public class ProblemType {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id; // Generated by database internally
	
	private String problemurl; // need to provide image url with options.
	
	private String solutionurl; // [optional] provide solution url.
	
	@Enumerated(EnumType.STRING)
	private Subject subject; 
	
	@Enumerated(EnumType.STRING)
	private MCQ isMcq; // Yes or no
	
	private int previousYear; // previous Year if came in either Jee Mains or Jee Advance.
	
	@Enumerated(EnumType.STRING)
	private Exam aboutExam; //[JEE_MAIN OR JEE_ADVANCE]
	
	private String problemId; // problemId given by user.
	
	@Enumerated(EnumType.STRING)
	private Level problemLevel; // Level of problem
	
	@Enumerated(EnumType.STRING)
	private Present isPresent; // isPresent to show or not.
	
	private String correctOption; // correct option of problem.
	
	/**
	 * Add more functionality for the user. on 02-12-23.
	 * 1. Add field to show userChossed option.
	 * 2. Start Time and end time for got the problem.
	 */
	
	private LocalDateTime startTime;
	
	private LocalDateTime endTime;
	
	private String userChoosedOption;
	
	@Enumerated(EnumType.STRING)
	private ChoosedOptionCorrect choosedOptionCorrect;
	/**
	 * Above variable used to give CORRECT OR WRONG value. if choosedoption by user is Correct.
	 */
	
	private long timeTookToSolveProblem;
	/**
	 * time took by user to solve this problem.
	 */
	
	private String commentByUser; // Comment by user if any.
	
	@Enumerated(EnumType.STRING)
	private Shift problemShift; // Shift in which given problem came.
	
	@Enumerated(EnumType.STRING)
	private ProblemSet problemSet; // Set in which problem came.
	
	private LocalDate problemShowOnDate; //set on which date when we showed this problem to user.
	
	@CreationTimestamp
	private Date creationtime; // creation time of problem in db.
	
	@UpdateTimestamp
	private Date modifiedtime; // modified time of problem in db.
	
}
